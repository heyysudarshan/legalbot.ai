[versions]
# Library and plugin versions
kotlin = "2.2.10"
androidGradlePlugin = "8.12.1"
activityCompose = "1.10.1"
composeMultiplatform = "1.9.0-beta3"
hotReload = "1.0.0-beta05"
julie = "1.0.0-alpha"
navigation = "2.9.0-beta05"
viewmodel = "2.9.2"
kotlinCoroutines = "1.10.2"
kotlinSerialization = "1.9.0"
koin = "4.1.0"

# android-app module's configuration information
androidApp-group = "legalbot.android.app"
androidApp-version = "1.0.0"

# android-app module's android app package information
androidApp-androidApp-namespace = "legalbot.android.app"
androidApp-androidApp-compileSdk = "36"
androidApp-androidApp-applicationId = "legalbot.android.app"
androidApp-androidApp-minSdk = "24"
androidApp-androidApp-targetSdk = "36"
androidApp-androidApp-versionCode = "1"
androidApp-androidApp-versionName = "1.0"

# desktop-app module's configuration information
desktopApp-group = "legalbot.desktop.app"
desktopApp-version = "1.0.0"
desktopApp-mainClass = "legalbot.desktop.app.MainKt"

# web-app module's configuration information
webApp-group = "legalbot.web.app"
webApp-version = "1.0.0"

# compose-app module's configuration information
composeApp-group = "legalbot.compose.app"
composeApp-version = "1.0.0"

# compose-app module's android library package information
composeApp-androidLibrary-namespace = "legalbot.compose.app"
composeApp-androidLibrary-compileSdk = "36"
composeApp-androidLibrary-minSdk = "24"

# shared module's configuration information
shared-group = "compose.app.shared"
shared-version = "1.0.0"
shared-packageOfResClass = "compose.app.shared.resources"

# shared module's android library package information
shared-androidLibrary-namespace = "compose.app.shared"
shared-androidLibrary-compileSdk = "36"
shared-androidLibrary-minSdk = "24"

# user-onboarding module's configuration information
userOnboarding-group = "legalbot.user.onboarding"
userOnboarding-version = "1.0.0"

# user-onboarding module's android library package information
userOnboarding-androidLibrary-namespace = "legalbot.user.onboarding"
userOnboarding-androidLibrary-compileSdk = "36"
userOnboarding-androidLibrary-minSdk = "24"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
compose-multiplatform-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "composeMultiplatform" }
compose-multiplatform-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "composeMultiplatform" }
compose-multiplatform-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }
compose-multiplatform-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "composeMultiplatform" }
compose-multiplatform-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "composeMultiplatform" }
compose-multiplatform-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "composeMultiplatform" }
compose-multiplatform-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "composeMultiplatform" }
compose-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewmodel" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "viewmodel" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinCoroutines" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

[bundles]
compose-multiplatform = ["compose-multiplatform-preview", "compose-multiplatform-resources",
    "compose-multiplatform-navigation", "compose-multiplatform-foundation",
    "compose-multiplatform-ui", "compose-multiplatform-material3", "compose-multiplatform-runtime"
]
compose-lifecycle = ["compose-viewmodel", "lifecycle-runtime-compose"]
koin-multiplatform = ["koin-core", "koin-compose", "koin-compose-viewmodel"]
koin-android = ["koin-core", "koin-android"]

[plugins]
kotlin-compiler = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-hot-reload = { id = "org.jetbrains.compose.hot-reload", version.ref = "hotReload" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }